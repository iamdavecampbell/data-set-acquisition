---
title: "Open Ottawa"
execute:
    cache: true
    jupyter: python3
author: "Dean Jayatilleke & Junpu Xie & Dave Campbell"
date: '2024-07-10'
slug: 
categories: []
tags: ["Ottawa"]
subtitle: ''
summary: 'Retrieving Open Ottawa Data and producing plots using Open Street Maps'
output: html_document
ipynb-shell-interactivity: all
---

## Possible Analysis and Keywords

- Open Street Maps
- Traffic Collisions
- Service Requests
- Ottawa Open Data

## Data Provider

[Open Ottawa](https://open.ottawa.ca/) is an open-access data portal designed to provide accessible datasets from municipal data sources. Users can access datasets from a variety of municipal departments including Parks, Public Health, Water Treatment, and many others. All data from this portal is subject to [Open Data Licence Version 2.0](https://open.ottawa.ca/pages/open-data-licence). Information released under this licence may be copied, modified, published, adapted, or otherwise used for any lawful purpose, as long as a data attibution from the information provider is included. When using information from multiple providers, the following attribution must be used: Contains information licensed under the Open Government Licence â€“ City of Ottawa.

```{python packages}

import pandas as pd 

import geopandas as gp
import mapclassify
import folium

```

A word about retrieving Open Ottawa Data.

Open Ottawa datasets are available to download as CSVs, however the download URL is generated on demand, and expires shortly, within a few days,
or sometimes even hours. For this reason, when revisiting a dataset, you may have to navigate to the dataset's "About" page and regenerate a download link.


### Service Requests 

```{python service request dataset}

#https://open.ottawa.ca/datasets/8a5030af268a4a3485b72356dd7dfa85/about

service = pd.read_csv("311opendata_currentyear")

service.head()

```


```{python service data cleaning}

service.columns = service.columns.str.split("|").str[0].str.rstrip()

```

Some service requests do not include location data. Let's filter those out.

```{python service locations}

service_locations = service[~service["Latitude"].str.contains("N")]

service_locations.tail()

```

After initially plotting all points, I noticed that there was a service request apparently placed from the Pacific Ocean near Africa. Clearly there was a data input error. It's worth filtering for latitudes containing 45 (which reflect Ottawa).

```{python noise complaints map}

service_geo = gp.GeoDataFrame(
    service_locations, geometry=gp.points_from_xy(service_locations["Longitude"],
    service_locations["Latitude"]), crs="epsg:4386")

service_geo[service_geo["Latitude"].str.contains("45")].explore()


```

```{python traffic collision dataset}

#https://open.ottawa.ca/datasets/ottawa::2020-tabular-transportation-collision-data/about

traffic = pd.read_csv("2020_Tabular_Transportation_Collision_Data.csv")

traffic.head()

```


```{python collision map}

traffic_geo = gp.GeoDataFrame(
    traffic, geometry=gp.points_from_xy(traffic["Longitude"],
    traffic["Latitude"]), crs="epsg:4386")

traffic_geo.explore()

```
