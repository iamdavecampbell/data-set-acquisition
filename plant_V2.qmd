---
title: "Production and Sale of Greenhouse Flowers and Plants - Open Canada"
execute:
    cache: true
    jupyter: python3
date: '2020-08-10'
author: "Dean Jayatilleke & Junpu Xie & Dave Campbell"
slug: production-data-production-and-sale-of-greenhouse-flowers-and-plants-open-canada
categories: ["Production Data"]
tags: ["Spatial Data Set", "Time Series", "Line Chart", "Regression", "Greenhouse Flowers and Plants", "Production Data", "Canada"]
subtitle: ''
summary: 'The dataset of plants production and sales is described by many meaningful variables, such as years from 2007 to 2019, geometry which includes Canada and its 10 provinces, flowers and 5 plants types and two output types, which are production with the unit of a number and sales with the unit of a dollar.'
output: html_document
ipynb-shell-interactivity: all
---

## Possible analysis and Keywords

- Spatial Data Set 
- Time Series
- Line Chart
- Simple Linear Regression
- Greenhouse Flowers and Plants
- Production Data

## Data Provider

Statistics Canada's [Open Government](https://open.canada.ca/en) is a free and open-access platform  containing over 80,000 datasets across diverse subjects. The purpose of sharing all data documents with the public is to remain transparent and accessible. 

Dataset can be discovered by multiple searching methods [here](https://open.canada.ca/en/open-data), such as [Browse by subject](https://open.canada.ca/en/open-data), [Open Government Portal](https://search.open.canada.ca/en/od/?sort=last_modified_tdt%20desc&page=1&search_text=&od-search-portal=Open%20Data&_ga=2.198521263.1872662645.1597195650-535176367.1594143568) for direct keywords search, [Open Maps](https://open.canada.ca/en/open-map) which contains geospatial information data, [Open Data Inventory](https://open.canada.ca/en/search/inventory) from the government of Canada organization, [Apps Gallery](https://open.canada.ca/en/apps) for representing those mobile and web-based application data, [Open Data 101](https://open.canada.ca/en/open-data-principles) for letting people know how to use dataset and so on.

***

## Production and Sales of Greenhouse flowers and plants

The annual production and sales of different types of flowers and plants from 2007 to 2019 in Canada is compiled with its metadata file  [here](https://open.canada.ca/data/en/dataset/31552d6f-7504-4258-9125-8d9aa45792ce).  The metadata  contains detailed variable descriptions. The dataset and supporting documentation can are available from  [Statistics Canada](https://www150.statcan.gc.ca/t1/tbl1/en/tv.action?pid=3210024601).

Variables include years from 2007 to 2019, province of production, flower and plant types, and production count and sales.

## Exploratory Analysis

### Organizing Dataset

The following code is used to obtain and organize the dataset and separate it into two by output type (sales and production).

```{python dataset}

# packages
import requests, zipfile, io
import tempfile as tf
import pandas as pd
import seaborn as sb
import matplotlib.pyplot as plt


# Download the zip file of plant sales and production

temp = tf.TemporaryFile()
url = "https://www150.statcan.gc.ca/n1/tbl/csv/32100246-eng.zip"
r = requests.get(url)
temp = zipfile.ZipFile(io.BytesIO(r.content))
file_list = temp.namelist()
print(file_list)

```

```{python read csv}

plants = pd.read_csv(temp.open(file_list[0]))

# Rename a couple of columns
plants = plants.rename(columns = {"GEO" : "location", "REF_DATE" : "year"})

```

### Greenhouse plants production and sales in Canada

The following code is used to plot greenhouse plant production and sales in Canada.

```{python greenhouse plant production}

# Subset a dataset of plants production in Canada 

sb.set_style("darkgrid")

sb.lineplot(data = plants[(plants["location"] == "Canada") & 
                          (plants["Output"] == "Production (number)")],
                          x = "year",
                          y = "VALUE",
                          hue = "Flowers and plants")
plt.ylabel("Production (number)")
plt.title("Greenhouse plants production in Canada")                         
plt.legend(title = "Flowers and Plants",
           bbox_to_anchor=(1.05, 1),
           loc='upper left',
           borderaxespad=0)
plt.show();

```

```{python greenhouse plant sales}

plt.clf()
sb.lineplot(data = plants[(plants["location"] == "Canada") & 
                          (plants["Output"] == "Sales")],
                          x = "year",
                          y = "VALUE",
                          hue = "Flowers and plants")
plt.ylabel("Production (number)")
plt.title("Greenhouse plants sales in Canada")                         
plt.legend(title = "Flowers and Plants",
           bbox_to_anchor=(1.05, 1),
           loc='upper left',
           borderaxespad=0)
plt.show();

```

* So, the following code is used to discover the plant production in different provinces.

### Bedding plants (vegetables & ornamental) production 

```{python vegetable bedding plants}

# Select the datasets of two different bedding plants (vegetable & ornamental) in 10 different provinces

plt.clf()
sb.lineplot(data = plants[(plants["location"] != "Canada") & 
                          (plants["Output"] == "Production (number)") &
                          (plants["Flowers and plants"] == 
                          "Total vegetable bedding plants [115143421]")],
                          x = "year",
                          y = "VALUE",
                          hue = "location")
plt.ylabel("Number Produced")
plt.title("Total vegetable bedding plants production")                         
plt.legend(title = "Province",
           bbox_to_anchor=(1.05, 1),
           loc='upper left',
           borderaxespad=0)
plt.show();

```

```{python ornamental bedding plants}

plt.clf()
sb.lineplot(data = plants[(plants["location"] != "Canada") & 
                          (plants["Output"] == "Production (number)") &
                          (plants["Flowers and plants"] == "Total ornamental bedding plants [115143411]")],
                          x = "year",
                          y = "VALUE",
                          hue = "location")
plt.ylabel("Number Produced")
plt.title("Total ornamental bedding plants production")                         
plt.legend(title = "Province",
           bbox_to_anchor=(1.05, 1),
           loc='upper left',
           borderaxespad=0)
plt.show();

```

## Examining all production counts within Canada

```{python all production counts}

plants_2 = plants[(plants["location"] == "Canada") & 
                (plants["Output"] == "Sales")][["year",
                                               "Flowers and plants",
                                                "VALUE"]]

plants_2 = pd.pivot_table(plants_2,
                          values = "VALUE",
                          columns = "Flowers and plants",
                          index = "year").reset_index()
sb.pairplot(data = plants_2);
                    
``` 